name: AI Code Review (Latest Commit Only)

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]
    branches: [main, test]
    paths:
      # Auto-review: risky areas
      - 'scripts/**/*.js'
      - 'supabase/functions/**/*.js'
      - 'migrations/**/*.sql'
      - '.github/workflows/**'
      - '.github/scripts/**'
    paths-ignore:
      # Skip: docs/assets/tests
      - '**/*.md'
      - 'public/assets/**'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*test*'
  push:
    branches: [test]
    paths:
      # Auto-review: risky areas  
      - 'scripts/**/*.js'
      - 'supabase/functions/**/*.js'
      - 'migrations/**/*.sql'
      - '.github/workflows/**'
      - '.github/scripts/**'
    paths-ignore:
      # Skip: docs/assets/tests
      - '**/*.md'
      - 'public/assets/**'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*test*'

concurrency:
  group: ai-review-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  review:
    # Run if (A) labeled ai:review OR (B) path matched above OR (C) push to test
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && github.event.action == 'labeled' && contains(github.event.pull_request.labels.*.name, 'ai:review')) ||
      (github.event_name == 'pull_request' && github.event.action != 'labeled')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    env:
      LLM_API_BASE: https://api.openai.com/v1
      LLM_MODEL: gpt-5
      MAX_CHUNK_BYTES: "60000"
      FROM_FORK: ${{ github.event.pull_request.head.repo.fork }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Guard secrets for forks
        if: github.event_name == 'pull_request'
        run: |
          if [ "${FROM_FORK}" = "true" ] && ! grep -q '"ai:review"' <<< '${{ toJson(github.event.pull_request.labels.*.name) }}'; then
            echo "::notice ::Fork PR without ai:review label; skipping to protect secrets."
            exit 0
          fi

      - name: Compute diff
        id: diff
        run: |
          set -euo pipefail
          git diff HEAD^ HEAD > pr.diff || git diff --root HEAD > pr.diff

          if ! [ -s pr.diff ]; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "has_changes=true" >> $GITHUB_OUTPUT
          csplit -s -f chunk_ -b "%03d.diff" pr.diff '/^diff --git /' '{*}' || true
          [ -s chunk_000.diff ] || rm -f chunk_000.diff || true
          echo "chunks=$(ls -1 chunk_*.diff 2>/dev/null | wc -l)" >> $GITHUB_OUTPUT

      - name: Size guard
        id: size
        if: steps.diff.outputs.has_changes == 'true'
        run: |
          LINES=$(git diff --shortstat HEAD^ HEAD | awk '{print $(NF-1)}')
          echo "lines=${LINES:-0}" >> $GITHUB_OUTPUT

      - name: Skip tiny changes
        if: steps.size.outputs.lines != '' && fromJSON(steps.size.outputs.lines) < 5
        run: |
          echo "::notice ::Tiny change (${LINES} lines); skipping AI review."
          exit 0

      - name: Create prompt header
        if: steps.diff.outputs.has_changes == 'true'
        run: |
          cat > prompt_header.txt <<'ENDPROMPT'
          Role: Senior Staff Engineer reviewer
          Focus: (1) Correctness & security (2) Performance (3) Code quality
          Constraints:
          - Cite filename:line ranges
          - Max 10 findings total, â‰¤3 per file
          - Return STRICT JSON with arrays: BLOCKERS and NON_BLOCKING
          - Each item has: file, lines, type, why, patch
          - DO NOT include prose outside JSON

          Context: TrumpyTracker (Node.js, Supabase, vanilla JS, cost cap <$50/mo)

          Review ONLY this diff chunk. Return STRICT JSON. Each item: file, lines, type, why, patch. DO NOT include prose.
          ENDPROMPT

      - name: Run AI review script
        if: steps.diff.outputs.has_changes == 'true' && steps.diff.outputs.chunks != '0'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: .github/scripts/ai_review.sh

      - name: Post PR comment
        if: steps.diff.outputs.has_changes == 'true' && github.event_name == 'pull_request'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Check review.md exists before posting
          if [ ! -f review.md ]; then
            echo "::warning ::review.md not found, skipping PR comment"
            exit 0
          fi
          
          # Add workflow run link to review
          echo "" >> review.md
          echo "---" >> review.md
          echo "_[View full workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})_" >> review.md
          
          # Post comment to PR
          gh pr comment ${{ github.event.pull_request.number }} --body-file review.md

      - name: Remove label after review
        if: contains(github.event.pull_request.labels.*.name, 'ai:review')
        run: gh pr edit ${{ github.event.pull_request.number }} --remove-label "ai:review"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Show review
        if: always() && steps.diff.outputs.has_changes == 'true'
        run: cat review.md || echo "No review file"
