name: AI Code Review (Latest Commit Only)

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, test]
  push:
    branches: [test]

jobs:
  review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    env:
      LLM_API_BASE: https://api.openai.com/v1
      LLM_MODEL: gpt-5
      MAX_CHUNK_BYTES: "60000"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Compute diff
        id: diff
        run: |
          set -euo pipefail
          git diff HEAD^ HEAD > pr.diff || git diff --root HEAD > pr.diff

          if ! [ -s pr.diff ]; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "has_changes=true" >> $GITHUB_OUTPUT
          csplit -s -f chunk_ -b "%03d.diff" pr.diff '/^diff --git /' '{*}' || true
          [ -s chunk_000.diff ] || rm -f chunk_000.diff || true
          echo "chunks=$(ls -1 chunk_*.diff 2>/dev/null | wc -l)" >> $GITHUB_OUTPUT

      - name: Create prompt header
        if: steps.diff.outputs.has_changes == 'true'
        run: |
          cat > prompt_header.txt <<'ENDPROMPT'
          Role: Senior Staff Engineer reviewer
          Focus: (1) Correctness & security (2) Performance (3) Code quality
          Constraints:
          - Cite filename:line ranges
          - Max 10 findings total, â‰¤3 per file
          - Return STRICT JSON with arrays: BLOCKERS and NON_BLOCKING
          - Each item has: file, lines, type, why, patch
          - DO NOT include prose outside JSON

          Context: TrumpyTracker (Node.js, Supabase, vanilla JS, cost cap <$50/mo)

          Review ONLY this diff chunk. Return STRICT JSON. Each item: file, lines, type, why, patch. DO NOT include prose.
          ENDPROMPT

      - name: Run AI review script
        if: steps.diff.outputs.has_changes == 'true' && steps.diff.outputs.chunks != '0'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: .github/scripts/ai_review.sh

      - name: Show review
        if: always() && steps.diff.outputs.has_changes == 'true'
        run: cat review.md || echo "No review file"
